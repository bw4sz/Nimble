{
    "contents" : "---\ntitle: \"Observed2M_Model\"\nauthor: \"Ben Weinstein\"\ndate: \"June 6, 2016\"\noutput: html_document\n---\n\n```{r,warning=FALSE,message=FALSE,echo=FALSE,cache=FALSE}\nlibrary(reshape2)\nlibrary(foreach)\nlibrary(doSNOW)\nlibrary(chron)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(R2jags)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(gridExtra)\nlibrary(boot)\nlibrary(picante)\nlibrary(bipartite)\n\nopts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path=\"figureObserved/\")\n\n#new model update\nnewModel<-T\n```\n\n```{r,echo=F,cache=FALSE}\npaste(\"Run Completed at\",Sys.time())\n```\n\n```{r,eval=T}\n#Load in data from Observed2m_Generate.Rmd\nload(\"Observed.RData\")\nload(\"ObservedModel.RData\")\nnewModel<-T\n```\n\n```{r}\n#source functions\nsource(\"Bayesian/BayesFunctions.R\")\n```\n\n#View Raw Data\n```{r}\nggplot(indat,aes(x=Traitmatch,y=Yobs,col=as.factor(BUsed_Flowers))) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = \"glm\",method.args=list(family=\"binomial\")) + scale_color_manual(\"Resource Availability\",values=c('blue','red'))\n\nggplot(indat[indat$Yobs==1,],aes(x=Traitmatch,fill=as.factor(scaledR))) + facet_wrap(~Hummingbird,ncol=4,scales=\"free\") + geom_density(alpha=.7) + scale_fill_manual(\"Resource Availability\",values=c('blue','red'))\n\nm<-glmer(data=indat,Yobs~Traitmatch*scale(FlowerA)+(1|Hummingbird),family=\"binomial\")\nsummary(m)\n```\n\n#Hierarchical Occupancy Model\n\nFor hummingbird species i feeding on plant species j observed at time k and sampling event observed by transect (YTransect) or camera (YCamera)\n\nObservation Model:\n\n$$ YTransect_{i,j,k,d} \\sim Bernoulli(\\omega_{Transect}) $$\n$$ YCamera_{i,j,k,d} \\sim Bernoulli(\\omega_{Camera}) $$\n$$ \\omega_{Camera} <- \\phi_{Camera} * EffortCamera_k $$\n$$ \\omega_{Transect} <- \\phi_{Transect}* EffortTransect_k $$\n\nProcess Model:\n\n$$ p_{i,j,k} \\sim Bernoulli(\\rho_{i,j,k}) $$\n$$ logit(\\rho_{i,j,k}) = \\alpha_i + \\beta_{1,i} * Traitmatch_{i,j} + \\beta_{2,i} *Resources_k + \\beta_{3,i} * Traitmatch_{i,j} * Resources_k $$\n\n**Priors**\n\n$$ \\phi_{Camera} \\sim U(0,1) $$\n$$ \\phi_{Transect} \\sim U(0,1) $$\n$$\\alpha_i \\sim Normal(\\alpha_\\mu,\\alpha_\\tau)$$\n$$\\beta_{1,i} \\sim Normal(\\mu_{\\beta_1,\\tau_{beta_1}})$$\n$$\\beta_{2,i} \\sim Normal(\\mu_{\\beta_2,\\tau_{beta_2}})$$\n$$\\beta_{3,i} \\sim Normal(\\mu_{\\beta_3,\\tau_{beta_3}})$$\n\nGroup Level Means\n$$ \\mu_\\alpha \\sim Normal(0,0.0001)$$\n$$\\mu_{\\beta_1} \\sim Normal(0,0.0001)$$\n$$\\mu_{\\beta_2} \\sim Normal(0,0.0001)$$\n$$\\mu_{\\beta_3} \\sim Normal(0,0.0001)$$\n\nGroup Level Variance\n$$\\tau_{\\alpha} \\sim Uniform(0,1000)$$\n$$\\tau_{\\beta_1} \\sim Uniform(0,1000)$$\n$$\\tau_{\\beta_2} \\sim Uniform(0,1000)$$\n$$\\tau_{\\beta_3} \\sim Uniform(0,1000)$$\n\n```{r,eval=T,strip.white=T}\n#Source model\nsource(\"Bayesian/NmixturePoissonRagged2m.R\")\n\n#print model\nwriteLines(readLines(\"Bayesian/NmixturePoissonRagged2m.R\"))\n\n#Inits\nInitStage <- function(){\n  #A blank Y matrix - all present\n  initY<-array(dim=c(Birds,Plants,Times),1)\n  initB<-rep(0.5,Birds)\nlist(S=initY,dcam=initB,dtrans=initB)}\n\n#Parameters to track\nParsStage <- c(\"alpha\",\"beta1\",\"beta2\",\"beta3\",\"alpha_mu\",\"alpha_sigma\",\"beta1_sigma\",\"beta1_mu\",\"beta2_mu\",\"beta2_sigma\",\"beta3_mu\",\"beta3_sigma\",\"dtrans\",\"dcam\",\"dprior_cam\",\"dprior_trans\")\n\n\n#Jags Data\nDat<-list(\n  Yobs_camera = indat$Camera,\n  Yobs_transect = indat$Transect,\n  Birds=max(indat$jBird),\n  Bird=indat$jBird,\n  Plant=indat$jPlant,\n  Time=indat$jTime,\n  Plants=max(indat$jPlant),\n  Times=max(indat$jTime),\n  resources=resourceMatrix,\n  Nobs=nrow(indat),\n  cam_surveys= (indat$Survey_Type==\"Camera\")*1,\n  trans_surveys= (indat$Survey_Type==\"Transect\")*1,\n  Traitmatch=jTraitmatch)\n\n  #MCMC options\n  if(newModel){\n    system.time(m2<-jags.parallel(data=Dat,parameters.to.save =ParsStage,inits=InitStage,model.file=\"Bayesian/NmixturePoissonRagged2m.jags\",n.thin=2,n.iter=100000,n.burnin=99500,n.chains=2,DIC=F))\n  }\n```\n\n```{r,eval=F}\n#recompile if needed\nruns<-100000\n\nrecompile(m2)\n\nif(!newModel){\n  system.time(m2<-update(m2,n.iter=runs,n.burnin=runs*.9,n.thin=2))  \n}\n\n```\n\n```{r}\n#extract par to data.frame\npars_detect<-extract_par(m2,data=indat,Bird=\"jBird\",Plant=\"jPlant\")\n```\n\n##Assess Convergence\n\n```{r,cache=FALSE,fig.width=13,fig.height=5}\n###Chains\nggplot(pars_detect[pars_detect$par %in% c(\"alpha\",\"beta1\",\"beta2\",\"beta3\"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_grid(par~species,scale=\"free\") + theme_bw() + labs(col=\"Chain\") + ggtitle(\"Species Level\")\n```\n\n```{r,fig.height=5}\nggplot(pars_detect[pars_detect$par %in% c(\"dcam\",\"dtrans\"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_grid(species~par,scale=\"free\") + theme_bw() + labs(col=\"Chain\") + ggtitle(\"Species Level\")\n```\n\n```{r,fig.height=5,fig.width=11}\nggplot(pars_detect[pars_detect$par %in% c(\"dcam_prior\",\"dtrans_prior\",\"beta1_mu\",\"beta1_sigma\",\"beta2_mu\",\"beta2_sigma\",\"beta3_mu\",\"beta3_sigma\",\"alpha_mu\",\"alpha_sigma\"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + theme_bw() + labs(col=\"Chain\") + ggtitle(\"Group Level Parameters\") + facet_wrap(~par,scales=\"free\")\n```\n\n#Posteriors\n\n```{r,cache=FALSE,fig.width=11,fig.height=14}\n###Posterior Distributions\nggplot(pars_detect[pars_detect$par %in% c(\"alpha\",\"beta1\",\"beta2\",\"beta3\"),],aes(x=estimate)) + geom_histogram(position='identity') +  facet_grid(species~par,scales=\"free\") + theme_bw() + ggtitle(\"Species Parameters\")\n```\n\n```{r,cache=FALSE,fig.width=11,fig.height=8}\n#Detection figure\npars_detect<-merge(pars_detect,jagsIndexBird,by.x=\"species\",by.y=\"jBird\",all=T)\nggplot(pars_detect[pars_detect$par %in% c(\"dtrans\",\"dcam\"),],aes(x=par,y=estimate)) + geom_violin(fill='black') + theme_bw() + ggtitle(\"Detection Probability\") + scale_x_discrete(labels=c(\"Camera\",\"Transect\")) + facet_wrap(~Hummingbird)\n```\n\n```{r,cache=FALSE,fig.height=5,fig.width=13}\nggplot(pars_detect[pars_detect$par %in% c(\"beta3_mu\",\"beta3_sigma\",\"beta2_mu\",\"beta2_sigma\",\"beta1_mu\",\"beta1_sigma\",\"alpha_mu\",\"alpha_sigma\",\"dprior_cam\",\"dprior_trans\"),],aes(x=estimate)) + geom_histogram() + ggtitle(\"Group Level Posteriors\") + facet_wrap(~par,scale=\"free\",nrow=2) + theme_bw() \n```\n\n#Detection Table\n```{r}\ndetecttable<-group_by(pars_detect,Hummingbird,par) %>% filter(par %in% c('dcam','dtrans')) %>% summarize(mean=mean(estimate),lower=quantile(estimate,0.05),upper=quantile(estimate,0.95))\ndetecttable\n```\n\n#Predicted Relationship \n\n```{r,fig.height=4,fig.width=4}\n#Expand out pars\ncastdf<-dcast(pars_detect[pars_detect$par %in% c(\"beta1_mu\",\"beta2_mu\",\"beta3_mu\",\"alpha_mu\"),], Chain + Draw~par,value.var=\"estimate\")\n```\n\n## Posterior prediction\n\n```{r,fig.width=7,fig.height=6}\n#Trajectories from posterior\npredy<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat$Traitmatch,resources=indat$scaledR,beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)\n\nggplot(data=predy,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.4,fill=\"red\")  +  theme_bw() + ylab(\"Interactions\") + xlab(\"Difference between Bill and Corolla Length\") + geom_point(data=indat,aes(x=Traitmatch,y=Camera)) + geom_line(aes(y=mean)) + geom_point(data=indat,aes(x=Traitmatch,y=Transect)) \n```\n\n## At High and Low Resource Availability\n\n```{r,fig.height=6,fig.width=10}\n\n#Trajectories from posterior\npredH<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat[indat$BAll_Flowers==1,\"Traitmatch\"],resources=indat[indat$ BAll_Flowers==1,\"scaledR\"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)\n\npredL<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat[indat$BAll_Flowers==0,\"Traitmatch\"],resources=indat[indat$ BAll_Flowers==0,\"scaledR\"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)\n\npredhl<-melt(list(High=predH,Low=predL),id.vars=colnames(predH))\n\ncolnames(predhl)[5]<-\"BFlowerL\"\n\nindat$BFlowerL<-factor(as.character(indat$BAll_Flowers))\nlevels(indat$BFlowerL)<-c(\"Low\",\"High\")\n\nggplot(data=predhl,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=BFlowerL),alpha=0.2)  + geom_line(aes(y=mean,col=BFlowerL),size=.8) + theme_bw() + ylab(\"Interactions\") + xlab(\"Difference between Bill and Corolla Length\") + geom_point(data=mindat,aes(x=Traitmatch,y=value))+ labs(fill=\"Resource Availability\",col=\"Resource Availability\") \nggsave(\"Figures/AllRegression.jpeg\",height=5,width=7)\n\n```\n\n##Species Predictions\n\n```{r,fig.height=10,fig.width=11,eval=T}\n\ncastdf<-dcast(pars_detect[pars_detect$par %in% c(\"beta1\",\"beta2\",\"beta3\",\"alpha\"),], species +Chain +Draw ~par ,value.var=\"estimate\")\n\n#Turn to \ncastdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))\n\nspecies.split<-split(castdf,list(castdf$species),drop = T)\n\nspecies.traj<-list()\n\nfor(d in 1:length(species.split)){\n  x<-species.split[[d]]\n  index<-unique(x$species)\n  \n  #get data for those species\n  billd<-indat[indat$jBird %in% index,]\n\n  #scale resources\n  species.traj[[d]]<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd$scaledR,trait=billd$Traitmatch)\n  }\n\nnames(species.traj)<-names(species.split)\n\nspecies.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))\n\n#split out names and model\nspecies.traj[,c(\"Index\")]<-colsplit(species.traj$L1,\"\\\\.\",c(\"Index\"))\n\nspe<-merge(species.traj,jagsIndexBird,by.x=\"Index\",by.y=\"jBird\")\n\n#plot and compare to original data\nggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.2,fill='red') + geom_line(aes(y=mean),size=.5) + theme_bw() + ylab(\"Occurrence Probability\")+ xlab(\"Difference between Bill and Corolla Length\") + facet_wrap(~Hummingbird,scales=\"free\",ncol=4) + geom_point(data=mindat,aes(x=Traitmatch,y=value,shape=variable),size=2.5) + labs(shape=\"Sampling Method\")\n```\n\n###Species Predictions: High and Low Availability\n\n```{r,fig.height=10,fig.width=11,eval=T}\n\ncastdf<-dcast(pars_detect[pars_detect$par %in% c(\"beta1\",\"beta2\",\"beta3\",\"alpha\"),], species +Chain +Draw ~par ,value.var=\"estimate\")\n\n#Turn to \ncastdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))\n\nspecies.split<-split(castdf,list(castdf$species),drop = T)\n\nspecies.traj<-list()\n\nfor(d in 1:length(species.split)){\n  x<-species.split[[d]]\n  index<-unique(x$species)\n  \n  #get data for those species\n  billd<-indat[indat$jBird %in% index,]\n\n  sl<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd[billd$BAll_Flowers==0,\"scaledR\"],trait=billd[billd$BAll_Flowers==0,\"Traitmatch\"])\n  \n  sh<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd[billd$BAll_Flowers==1,\"scaledR\"],trait=billd[billd$BAll_Flowers==1,\"Traitmatch\"])\n  \n  sm<-melt(list(High=sh,Low=sl),id.vars=colnames(sl))\n  colnames(sm)[5]<-\"Resources\"\n  species.traj[[d]]<-sm\n  }\n\nnames(species.traj)<-names(species.split)\n\nspecies.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))\n\n#split out names and model\nspecies.traj[,c(\"Index\")]<-colsplit(species.traj$L1,\"\\\\.\",c(\"Index\"))\n\nspe<-merge(species.traj,jagsIndexBird,by.x=\"Index\",by.y=\"jBird\")\n\n#plot and compare to original data\nggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=Resources),alpha=0.2) + geom_line(aes(y=mean,col=Resources),size=.5) + theme_bw() + ylab(\"Occurrence Probability\")+ xlab(\"Difference between Bill and Corolla Length\") + facet_wrap(~Hummingbird,scales=\"free\",ncol=3) + geom_point(data=mindat,aes(x=Traitmatch,y=value,shape=variable),size=1.5,alpha=.5)\nggsave(\"Figures/SpeciesRegression.jpeg\",height=6,width=7)\n\n```\n\n##Species Level Interaction\n\n```{r,fig.height=11,fig.width=10,eval=F}\ncastdf<-dcast(pars_detect[pars_detect$par %in% c(\"beta1\",\"beta2\",\"beta3\",\"alpha\"),], species +Chain + Draw~par,value.var=\"estimate\")\n\n#Turn to \ncastdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))\n\nspecies.split<-split(castdf,list(castdf$species),drop = T)\n\nspecies.traj<-list()\n\nfor(d in 1:length(species.split)){\n  dat<-species.split[[d]]\n  index<-unique(dat$species)\n  \n  #get data for those species\n  billd<-mindat[mindat$jBird %in% index,]\n\n  #Calculate interaction effect\n  species.traj[[d]]<-intF(alpha=dat$alpha,beta1=dat$beta1,x=billd[billd$value > 0 & !is.na(billd$value),'Traitmatch'],resources=billd[billd$value > 0 & !is.na(billd$value),'scaledR'],beta2=dat$beta2,beta3=dat$beta3)\n  }\n\nnames(species.traj)<-names(species.split)\nspecies.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))\n\n#split out names and model\nspecies.traj[,c(\"Index\")]<-colsplit(species.traj$L1,\"\\\\.\",c(\"Index\"))\n\nspe<-merge(species.traj,jagsIndexBird,by.x=\"Index\",by.y=\"jBird\")\n\n#match colnames\n\n#plot and compare to original data\nggplot(data=spe,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=Hummingbird),alpha=0.3) + geom_line(aes(y=mean,col=Hummingbird),size=1) + theme_bw() + xlab(\"Difference between Bill and Corolla Length\")  + ylab(\"Effect of Resources on Trait Difference\") + facet_wrap(~Hummingbird,scales=\"free\",ncol=3)\nggsave(\"Figures/SpeciesInteraction.jpeg\",height=6,width=7)\n```\n\nThese plots can be tricky to interpret if one forgets that trait matching as a covariate is a distance. Therefore remember that a positive slope in the plot above indiciates, \"As resources increase species use flowers less similiar to their bill lengths\". \n\n##Interaction density functions\nLet's take a closer look at distribution of interaction effect posteriors values for each species.\n\n```{r,eval=F}\npost<-pars_detect %>% filter(par %in% \"beta3\") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate)) %>% melt(id.vars='Hummingbird')\nggplot(pars_detect[pars_detect$par %in% \"beta3\",],aes(x=estimate)) + geom_histogram() + facet_wrap(~Hummingbird,scales='free',ncol=4) + geom_vline(data=post,aes(xintercept=value,col=variable))\n```\n\n##Trait-matching and Bill Length\n\nDo species with long bill lengths have positive traitmatching effects?\n\n```{r,fig.height=7,fig.width=8}\n#species names\nb<-pars_detect[pars_detect$par %in% \"beta1\",]\n\n#traits\nb<-merge(b,hum.morph,by.x=\"Hummingbird\",by.y=\"English\")\n\npost<-b %>% filter(par %in% \"beta1\") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate),quantile_l=quantile(estimate)[[1]],quantile_u=quantile(estimate)[[2]]) %>% melt(id.vars='Hummingbird')\n\n#get order of mean posterior\nord<-post %>% filter(variable==\"mean\") %>% arrange(value) %>% .$Hummingbird\n\nb$Hummingbird<-factor(b$Hummingbird,levels=ord)\nggplot(b,aes(y=estimate,x=as.factor(Total_Culmen),group=Hummingbird)) + geom_violin(fill='grey50') + coord_flip()  + ggtitle(\"Trait-matching and Bill Length\") + theme_bw()\n```\n\n##Interaction and Bill Length\n\nDo species with long bill lengths have positive interaction effects?\n\n```{r,fig.height=7,fig.width=8,eval=F}\n#species names\nb<-pars_detect[pars_detect$par %in% \"beta3\",]\n\n#traits\nb<-merge(b,hum.morph,by.x=\"Hummingbird\",by.y=\"English\")\n\npost<-b %>% filter(par %in% \"beta3\") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate),quantile_l=quantile(estimate)[[1]],quantile_u=quantile(estimate)[[2]]) %>% melt(id.vars='Hummingbird')\n\n#get order of mean posterior\nord<-post %>% filter(variable==\"mean\") %>% arrange(value) %>% .$Hummingbird\n\nb$Hummingbird<-factor(b$Hummingbird,levels=ord)\nggplot(b,aes(y=estimate,x=Hummingbird,fill=Total_Culmen)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle(\"Interaction Effect and Bill Length\") + theme_bw()\n\n```\n\n#Estimated niche breadth\n\n```{r}\ncastdf<-dcast(pars_detect[pars_detect$par %in% c(\"beta1\",\"beta2\",\"beta3\",\"alpha\"),], species +Chain + Draw~par,value.var=\"estimate\")\n\n#Turn to \ncastdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))\n\nspecies.split<-split(castdf,list(castdf$species),drop = T)\n\nspecies.traj<-lapply(species.split,function(dat){\n  index<-unique(dat$species)\n  \n  #get data for those species\n  billd<-indat[indat$jBird %in% index,]\n  \n  d<-data.frame(alpha=dat$alpha,beta1=dat$beta1,beta2=dat$beta2,beta3=dat$beta3)\n  \n  #fit regression for each input estimate\n  sampletraj<-list()\n  \n  for (y in 1:nrow(d)){\n    v=inv.logit(d$alpha[y] + d$beta1[y] * billd$Traitmatch + d$beta2[y] * billd$scaledR + d$beta3[y] * billd$Traitmatch*billd$scaledR)\n    \n    sampletraj[[y]]<-data.frame(x=as.numeric(billd$Traitmatch),y=as.numeric(v),r=as.numeric(billd$scaledR),jBird=billd$jBird,jPlant=billd$jPlant,jTime=billd$jTime)\n  }\n  \n  sample_all<-rbind_all(sampletraj)\n})\n  \nspecies.traj<-rbind_all(species.traj)\n```\n\nMean Estimates for Corolla Sizes\n\n```{r}\nspecies.mean<-species.traj %>% group_by(jBird,jPlant,r) %>% summarize(Traitmatch=unique(x),phi=mean(y))\n\nspecies.mean<-merge(species.mean,indat[,colnames(indat) %in% c(\"jBird\",\"jPlant\",\"jTime\",\"Hummingbird\",\"Iplant_Double\")])\n\n#get corolla sizes\nspecies.mean<-merge(species.mean,fl.morph,by.x=\"Iplant_Double\", by.y=\"Group.1\")\n\n#bill order\nord<-hum.morph %>% arrange(Total_Culmen) %>% .$English\nspecies.mean$Hummingbird<-factor(species.mean$Hummingbird,levels=ord)\n\n#add level to hum.morph to match naming convention\nspecies.mean<-merge(species.mean,hum.morph[,c(\"English\",\"Total_Culmen\")],by.x=\"Hummingbird\",by.y=\"English\")\n\np<-ggplot(species.mean,aes(x=TotalCorolla,y=phi,col=as.factor(r))) + geom_line(size=.9) + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + facet_wrap(~Hummingbird,ncol=3,scales=\"free_y\")  + theme_bw() + ylab(\"Probability of Interaction\") + scale_color_manual(\"Resource Availability\",labels=c(\"Low\",\"High\"),values=c(\"Blue\",\"Red\")) + xlab(\"Flower Corolla Length (mm)\") \np\nggsave(\"Figures/ResponseCurves.jpeg\",height=6.5,width=9)\n```\n\nDensity curves\n\n```{r}\n#ggplot(species.mean) + geom_density2d(aes(x=TotalCorolla,y=lambda,col=as.factor(BAll_Flowers))) + theme_bw() + facet_wrap(~Hummingbird,scales=\"free\",ncol=3)+ scale_color_manual(\"Resources Availability\",labels=c(\"Low\",\"High\"),values=c(\"Blue\",\"Red\")) + ggtitle(\"2D Density Plots\") + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed')\n```\n\n#Niche Breadth \n\n```{r}\nspecies.mean<-species.traj %>% group_by(jBird,jPlant,r) %>% summarize(Traitmatch=unique(x),phi=mean(y),phi_low=quantile(y,0.05),phi_high=quantile(y,0.95))\n\n#merge names\nspecies.mean<-merge(species.mean,jagsIndexBird)\nspecies.mean<-merge(species.mean,jagsIndexPlants)\n\n#get corolla sizes\nspecies.mean<-merge(species.mean,fl.morph,by.x=\"Iplant_Double\", by.y=\"Group.1\")\n\n#bill order\nord<-hum.morph %>% arrange(Total_Culmen) %>% .$English\nspecies.mean$Hummingbird<-factor(species.mean$Hummingbird,levels=ord)\n\n#add level to hum.morph to match naming convention\nspecies.mean<-merge(species.mean,hum.morph[,c(\"English\",\"Total_Culmen\")],by.x=\"Hummingbird\",by.y=\"English\")\n\n#label factor\nspecies.mean$r<-as.factor(species.mean$r)\nlevels(species.mean$r)<-c(\"Low\",\"High\")\nggplot(species.mean) + geom_ribbon(alpha=0.4,aes(x=TotalCorolla,ymin=phi_low,ymax=phi_high,fill=r)) + theme_bw() + facet_wrap(~Hummingbird,scales=\"free\",ncol=4)+ ggtitle(\"Niche Breadth\") + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + geom_line(aes(x=TotalCorolla,y=phi,fill=r)) + ylab(\"Probability of Interaction\") + xlab(\"Corolla Length (mm)\") + scale_fill_manual(\"Resource Availability\",values=c(\"Blue\",\"Red\")) + ylim(0,1)\nggsave(\"Figures/NicheBreadth.jpeg\",height=6,width=9)\n```\n\n#Generate network\n\n```{r}\n#Split by resource\nnsplit<-split(species.mean,species.mean$r)\n\nmakeN<-function(x){\n  \n  #input matrix\n  aggm<-matrix(nrow=nrow(jagsIndexBird),ncol=nrow(jagsIndexPlants),data=0)\n  for (j in 1:nrow(x)){\n    aggm[x[j,\"jBird\"],x[j,\"jPlant\"]]<-rbinom(1,1,prob=x[j,\"phi\"])\n  }\n  #calculate network statistic\n  nstat<-networklevel(aggm,index=c(\"connectance\",\"nestedness\",\"niche overlap\"),level=\"lower\")\n}\n\nnstat<-lapply(nsplit,function(x){\n  netstat<-melt(t(sapply(1:500,function(k) makeN(x)))) \n  colnames(netstat)<-c(\"Iteration\",\"Metric\",\"value\")\n  return(netstat)\n})\n\nnames(nstat)<-c(\"Low\",\"High\")\nnstat<-melt(nstat,colnames(nstat[[1]]))\n\nggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Metric,scales='free',nrow=2) + scale_fill_discrete(\"Resource Availability\")\n```\n\n```{r}\nsave.image(\"ObservedModel.RData\")\n```\n",
    "created" : 1467062702885.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3361095449",
    "id" : "706FFAD4",
    "lastKnownWriteTime" : 1467044689,
    "path" : "~/NetworkPredict/Observed2m_model.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_markdown"
}