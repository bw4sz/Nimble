{
    "contents" : "---\ntitle: \"The BUGS language (state-space model example)\"\nsubtitle: \"NIMBLE training materials module\"\nauthor: \"NIMBLE Development Team\"\noutput:\n  html_document:\n    code_folding: show\n---\n\n```{r chunksetup, include=FALSE} \n# Following code is only needed for slide generation, not for using R code separately.\nlibrary(methods)\n```\n```{r loadnimble, include=FALSE}\nlibrary(nimble)\n```\n\n# The BUGS language\n\nThe BUGS language is described in detail in the [relevant section of the BUGS manual](http://www.openbugs.net/Manuals/ModelSpecification.html). \n\n### Stochastic declarations:\n\n  - `x ~ dgamma(shape, scale)` (x follows a gamma distribution with parameters `shape` and `scale`)\n\n### Deterministic declarations\n\n  - `y <- 2 * x`\n\n### For loops\n\n  - `for(i in 1:10) {x[i] <- exp(y[i])}`\n\n### Classic BUGS examples\n\n  - included in NIMBLE or found here on the [JAGS website](https://sourceforge.net/projects/mcmc-jags/files/Examples/).\n  - Information: [Volume 1](http://www.mrc-bsu.cam.ac.uk/wp-content/uploads/WinBUGS_Vol1.pdf), [Volume 2](http://www.mrc-bsu.cam.ac.uk/wp-content/uploads/WinBUGS_Vol2.pdf), and [Volume 3](http://www.mrc-bsu.cam.ac.uk/wp-content/uploads/WinBUGS_Vol3.pdf) of the WinBUGS example manuals.\n\n### NIMBLE's dialect of BUGS :\n\n   - Differences between NIMBLE and WinBUGS, OpenBUGS and/or JAGS will be covered later.\n   - Also described in Section 5 of the [NIMBLE Users Manual](http://r-nimble.org/manuals/NimbleUserManual.pdf).\n\n# A basic example: population state-space model\n\nWe'll use an example from Chapter 5 of K&eacute;ry and Schaub (2012)[^1]\n\nCode and data are available from the [BPA web site](http://www.vogelwarte.ch/de/projekte/publikationen/bpa/complete-code-and-data-files-of-the-book.html), in bpa-code.txt.\n\n### Summary\n\n   - House martin counts (1990 - 2009) by Reto Freuler\n   - Exponential population model with population growth rate varying each year\n   - Log-normal observations of population size.\n   - Parameters to estimate: mean and variance of population growth rate; observation variance.\n   - Latent states: True population size in each year.\n   - The example also generates predictions through 2015.\n\n### BUGS \\& NIMBLE code for the model\n\n```{r model-code}\nlibrary(nimble)\nssmCode <- nimbleCode({\n        # Priors and constraints\n        logN.est[1] ~ dnorm(5.6, 0.01)    # Prior for initial population size\n        mean.r ~ dnorm(1, 0.001)          # Prior for mean growth rate\n        sigma.proc ~ dunif(0, 1)          # Prior for sd of state process\n        sigma2.proc <- pow(sigma.proc, 2)\n        tau.proc <- pow(sigma.proc, -2)\n        sigma.obs ~ dunif(0, 1)           # Prior for sd of observation process\n        sigma2.obs <- pow(sigma.obs, 2)\n        tau.obs <- pow(sigma.obs, -2)\n\n        # State process\n        for (t in 1:(T-1)){\n           r[t] ~ dnorm(mean.r, tau.proc)\n           logN.est[t+1] <- logN.est[t] + r[t]\n        }\n\n        # Observation process \n        for (t in 1:T) {\n           y[t] ~ dnorm(logN.est[t], tau.obs)\n        }\n\n        # Population sizes on real scale\n        for (t in 1:T) {\n            N.est[t] <- exp(logN.est[t])\n        }\n})\n```\n\nArgument to `nimbleCode` was copied and pasted from the book's code.\n\n[^1]: \nMarc K&eacute;ry and Michael Schaub. 2012. Bayesian Population Analysis Using WinBUGS: A hierarchical perspective.  Elsevier / Academic Press.\n\n# Reading BUGS code from a file\n\nA typical idiom for users of the R2WinBUGS and rjags packages is to use `sink` and `cat` to write BUGS code to a file from R:\n```{r, ssm-cat}\nsink(\"ssm.bug\")\ncat(\"\nmodel {\n# Priors and constraints\nlogN.est[1] ~ dnorm(5.6, 0.01)       # Prior for initial population size\nmean.r ~ dnorm(1, 0.001)             # Prior for mean growth rate\nsigma.proc ~ dunif(0, 1)             # Prior for sd of state process\nsigma2.proc <- pow(sigma.proc, 2)\ntau.proc <- pow(sigma.proc, -2)\nsigma.obs ~ dunif(0, 1)              # Prior for sd of observation process\nsigma2.obs <- pow(sigma.obs, 2)\ntau.obs <- pow(sigma.obs, -2)\n\n# State process\nfor (t in 1:(T-1)){\n   r[t] ~ dnorm(mean.r, tau.proc)\n   logN.est[t+1] <- logN.est[t] + r[t]\n   }\n\n# Observation process\nfor (t in 1:T) {\n   y[t] ~ dnorm(logN.est[t], tau.obs)\n   }\n\n# Population sizes on real scale\nfor (t in 1:T) {\n   N.est[t] <- exp(logN.est[t])\n   }\n}\n\",fill = TRUE)\nsink()\n```\n\nThis can be read into NIMBLE using `readBUGSmodel`:\n\n```{r read-bugs-model}\nssmCode <- readBUGSmodel('ssm.bug', dir =\"\", returnModelComponentsOnly = TRUE)$model\nfile.remove('ssm.bug')\n```\n\n",
    "created" : 1467058844443.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3540227882",
    "id" : "9DE0CAE2",
    "lastKnownWriteTime" : 1466997138,
    "path" : "~/nimble-isec-2016/bugs_language.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}